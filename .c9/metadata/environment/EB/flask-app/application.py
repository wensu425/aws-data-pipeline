{"filter":false,"title":"application.py","tooltip":"/EB/flask-app/application.py","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":9,"column":22},"end":{"row":9,"column":23},"action":"insert","lines":[","],"id":2}],[{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"insert","lines":[" "],"id":3},{"start":{"row":9,"column":24},"end":{"row":9,"column":25},"action":"insert","lines":["h"]},{"start":{"row":9,"column":25},"end":{"row":9,"column":26},"action":"insert","lines":["o"]}],[{"start":{"row":9,"column":25},"end":{"row":9,"column":26},"action":"remove","lines":["o"],"id":4},{"start":{"row":9,"column":24},"end":{"row":9,"column":25},"action":"remove","lines":["h"]}],[{"start":{"row":9,"column":24},"end":{"row":9,"column":25},"action":"insert","lines":["h"],"id":5},{"start":{"row":9,"column":25},"end":{"row":9,"column":26},"action":"insert","lines":["o"]},{"start":{"row":9,"column":26},"end":{"row":9,"column":27},"action":"insert","lines":["s"]},{"start":{"row":9,"column":27},"end":{"row":9,"column":28},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"insert","lines":[" "],"id":6}],[{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"remove","lines":[" "],"id":7}],[{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"insert","lines":[" "],"id":8},{"start":{"row":9,"column":29},"end":{"row":9,"column":30},"action":"insert","lines":["="]}],[{"start":{"row":9,"column":30},"end":{"row":9,"column":31},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":9,"column":31},"end":{"row":9,"column":33},"action":"insert","lines":["''"],"id":10}],[{"start":{"row":9,"column":32},"end":{"row":9,"column":33},"action":"insert","lines":["0"],"id":11},{"start":{"row":9,"column":33},"end":{"row":9,"column":34},"action":"insert","lines":["."]},{"start":{"row":9,"column":34},"end":{"row":9,"column":35},"action":"insert","lines":["0"]},{"start":{"row":9,"column":35},"end":{"row":9,"column":36},"action":"insert","lines":["."]},{"start":{"row":9,"column":36},"end":{"row":9,"column":37},"action":"insert","lines":["0"]},{"start":{"row":9,"column":37},"end":{"row":9,"column":38},"action":"insert","lines":["."]},{"start":{"row":9,"column":38},"end":{"row":9,"column":39},"action":"insert","lines":["0"]}],[{"start":{"row":9,"column":41},"end":{"row":42,"column":21},"action":"insert","lines":["from flask import Flask","","# print a nice greeting.","def say_hello(username = \"World\"):","    return '<p>Hello %s!</p>\\n' % username","","# some bits of text for the page.","header_text = '''","    <html>\\n<head> <title>EB Flask Test</title> </head>\\n<body>'''","instructions = '''","    <p><em>Hint</em>: This is a RESTful web service! Append a username","    to the URL (for example: <code>/Thelonious</code>) to say hello to","    someone specific.</p>\\n'''","home_link = '<p><a href=\"/\">Back</a></p>\\n'","footer_text = '</body>\\n</html>'","","# EB looks for an 'application' callable by default.","application = Flask(__name__)","","# add a rule for the index page.","application.add_url_rule('/', 'index', (lambda: header_text +","    say_hello() + instructions + footer_text))","","# add a rule when the page is accessed with a name appended to the site","# URL.","application.add_url_rule('/<username>', 'hello', (lambda username:","    header_text + say_hello(username) + home_link + footer_text))","","# run the app.","if __name__ == \"__main__\":","    # Setting debug to True enables debug output. This line should be","    # removed before deploying a production app.","    application.debug = True","    application.run()"],"id":12}],[{"start":{"row":6,"column":26},"end":{"row":6,"column":27},"action":"insert","lines":["a"],"id":13}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":21},"action":"remove","lines":["from flask import Flask","","app = Flask(__name__)","","@app.route(\"/\")","def home():","    return \"Hello, World!\"a","    ","if __name__ == \"__main__\":","    app.run(debug=True, host = '0.0.0.0')from flask import Flask","","# print a nice greeting.","def say_hello(username = \"World\"):","    return '<p>Hello %s!</p>\\n' % username","","# some bits of text for the page.","header_text = '''","    <html>\\n<head> <title>EB Flask Test</title> </head>\\n<body>'''","instructions = '''","    <p><em>Hint</em>: This is a RESTful web service! Append a username","    to the URL (for example: <code>/Thelonious</code>) to say hello to","    someone specific.</p>\\n'''","home_link = '<p><a href=\"/\">Back</a></p>\\n'","footer_text = '</body>\\n</html>'","","# EB looks for an 'application' callable by default.","application = Flask(__name__)","","# add a rule for the index page.","application.add_url_rule('/', 'index', (lambda: header_text +","    say_hello() + instructions + footer_text))","","# add a rule when the page is accessed with a name appended to the site","# URL.","application.add_url_rule('/<username>', 'hello', (lambda username:","    header_text + say_hello(username) + home_link + footer_text))","","# run the app.","if __name__ == \"__main__\":","    # Setting debug to True enables debug output. This line should be","    # removed before deploying a production app.","    application.debug = True","    application.run()"],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":21},"action":"insert","lines":["from flask import Flask","","# print a nice greeting.","def say_hello(username = \"World\"):","    return '<p>Hello %s!</p>\\n' % username","","# some bits of text for the page.","header_text = '''","    <html>\\n<head> <title>EB Flask Test</title> </head>\\n<body>'''","instructions = '''","    <p><em>Hint</em>: This is a RESTful web service! Append a username","    to the URL (for example: <code>/Thelonious</code>) to say hello to","    someone specific.</p>\\n'''","home_link = '<p><a href=\"/\">Back</a></p>\\n'","footer_text = '</body>\\n</html>'","","# EB looks for an 'application' callable by default.","application = Flask(__name__)","","# add a rule for the index page.","application.add_url_rule('/', 'index', (lambda: header_text +","    say_hello() + instructions + footer_text))","","# add a rule when the page is accessed with a name appended to the site","# URL.","application.add_url_rule('/<username>', 'hello', (lambda username:","    header_text + say_hello(username) + home_link + footer_text))","","# run the app.","if __name__ == \"__main__\":","    # Setting debug to True enables debug output. This line should be","    # removed before deploying a production app.","    application.debug = True","    application.run()"],"id":15}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":33,"column":21},"end":{"row":33,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1605645188063,"hash":"31971f8d14b13db7132d0c22ae0078a71eef01b0"}